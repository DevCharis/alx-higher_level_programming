#include "lists.h"

/**
 * main - Entry point for testing the is_palindrome function
 *
 * This function creates a singly linked list of integers,
 * prints the list, checks whether the list is a palindrome,
 * and prints the result. It also frees the allocated memory
 * for the list before exiting.
 *
 * Return: Always 0.
 */





int is_palindrome(listint_t **head)
{
listint_t *slow = *head, *fast = *head, *prev = NULL, *second_half;
listint_t *midnode = NULL;
if (*head == NULL || (*head)->next == NULL)
return (1);

while (fast && fast->next)
{
fast = fast->next->next;
prev = slow;
slow = slow->next;
}

if (fast != NULL)
{
midnode = slow;
slow = slow->next;
}

second_half = slow;
prev->next = NULL;

second_half = reverse_list(second_half);

int result = compare_lists(*head, second_half);

second_half = reverse_list(second_half);

if (midnode)
prev->next = midnode;
midnode->next = second_half;

return (result);
}

